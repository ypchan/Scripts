#!/usr/bin/env python3
'''
splitFasta -- split the multi-FASTA file into subfiles by number of sequences in each subfile or number of subfiles

DATE:
    2021-01-13
BUGS:
    Any bugs should be send to 764022822@qq.com
'''
import os
import sys
import gzip
import argparse

def parse_args():
    """Parse command-line arguments

    Returns:
        object: args.<argument>
    """
    parser = argparse.ArgumentParser(description=__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter)

    parser.add_argument('input',
        metavar='<in-fasta>',
        type=str,
        help='input file in FASTA format')

    parser.add_argument('num_seq',
        type=int,
        metavar='<int>',
        help='number of sequences in each subfile. Number_files = Total_num_seq / num_seq')

    return parser.parse_args()

def out_subfile_by_num_seq(fasta, num_seq):
    """Output subfiles by number of sequences in each subfile

    Args:
        fasta (str): input fasta file
        num_seq (int): number of sequences in each subfile
    """
    subfilename_extension = os.path.basename(fasta)
    filename, extension = os.path.splitext(subfilename_extension)
    fafh = gzip.open(fasta, 'rt') if fasta.endswith('.gz') else open(fasta, 'rt')

    num_line = 0
    subfile_tag = 0


            subfile_name = filename + '_' + str(subfile_tag) + extension
            outfa_fh = open(subfile_name, 'wt')


    outfa_fh.close()

    fafh.close()

if __name__ == '__main__':
    args = parse_args()
    out_subfile_by_num_seq(args.input, args.num_seq)
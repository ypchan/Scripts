# correlation of CAZymease family and total
CAZydf_total <- subset(df, select=c(Strain, CBM, PL,CE, AA, GT , GH, Total_CAZy))
cor.test(CAZydf_total$CBM, CAZydf_total$Total_CAZy)
cor.test(CAZydf_total$PL, CAZydf_total$Total_CAZy)
cor.test(CAZydf_total$CE, CAZydf_total$Total_CAZy)
cor.test(CAZydf_total$AA, CAZydf_total$Total_CAZy)
cor.test(CAZydf_total$GT, CAZydf_total$Total_CAZy)
cor.test(CAZydf_total$GH, CAZydf_total$Total_CAZy)
# supplementary figure CAZymes
c1 <- ggplot(CAZydf_total, aes(x = Total_CAZy , y = CBM)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('CBM') +
xlab('Total CAZymes') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
c2 <- ggplot(CAZydf_total, aes(x = Total_CAZy , y = PL)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('PL') +
xlab('Total CAZymes') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
c3 <- ggplot(CAZydf_total, aes(x = Total_CAZy , y = CE)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('CE') +
xlab('Total CAZymes') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
c4 <- ggplot(CAZydf_total, aes(x = Total_CAZy , y = AA)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('AA') +
xlab('Total CAZymes') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
c5 <- ggplot(CAZydf_total, aes(x = Total_CAZy , y = GT)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('GT') +
xlab('Total CAZymes') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
c6 <- ggplot(CAZydf_total, aes(x = Total_CAZy , y = GH)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('GH') +
xlab('Total CAZymes') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
ggarrange(c1,c2,c3,c4,c5,c6)
# supplementart fig pairwise comparison of CAZymes between
colnames(df)
compared_complex  <- c("Acutatum",
"Destructivum",
"Gloeosporioides",
'Graminicola-caudatum',
"Orbiculare",
"Orchidearum",
"Spaethianum") # 7 complex with above 3 species
CAZy2complex <- data.frame(Plotorder = df$Plotorder, Strain = df$Strain, Complex=df$Complex, CAZy = df$Total_CAZy)
CAZy2complex <- CAZy2complex[which(CAZy2complex$Complex %in% compared_complex), ]
head(CAZy2complex)
by(CAZy2complex, CAZy2complex$Complex, function(df) shapiro.test(df[,4])) # Normality test
kruskal.test(CAZy ~ Complex,
data = CAZy2complex)  # Kruskal-Wallis rank sum test
dunnTest(CAZy ~ Complex,data = CAZy2complex , method='bonferroni') # Kruskal-Wallis multiple comparison, p-values adjusted with the Bonferroni method.
aggregate(CAZy2complex$CAZy, by=list(type=CAZy2complex$Complex),mean) # Mean of genome size each complex
CAZy2complex$Complex <- factor(CAZy2complex$Complex,
levels = c("Acutatum",
"Destructivum",
"Gloeosporioides",
'Graminicola-caudatum',
"Orbiculare",
"Orchidearum",
"Spaethianum")) # 7 complex with above 3 species
cazy_difference_complex <- ggplot(CAZy2complex, aes(x= Complex, y = CAZy)) +  # Plot with significance # supplementary figure CAZymes
geom_boxplot(aes(fill=Complex)) +
theme_bw() + geom_signif(comparisons = list(c("Acutatum", "Gloeosporioides"),
c("Acutatum", "Graminicola-caudatum"),
c("Destructivum", "Gloeosporioides"),
c("Gloeosporioides","Graminicola-caudatum"),
c("Gloeosporioides","Orbiculare"),
c("Gloeosporioides","Spaethianum")), map_signif_level = TRUE, y_position = c(600,630, 580, 510, 530, 560)) +
theme(axis.text.x = element_text(angle = 45, hjust =1), text = element_text(size = 8)) +
ylab('CAZymes') + xlab(NULL) + ylim(NA, 700)
cazy_difference_complex
# correleation of protease groups and total protease
colnames(df)
proteases <- subset(df, select = c(Strain, Complex, Aspartic, Cysteine, Glutamic, Serine, Mixed, Metallo, Asparagine, Unknown, Total_Protease))
for (n in c("Aspartic", 'Cysteine', 'Glutamic', 'Serine', 'Mixed', 'Metallo', 'Asparagine', 'Unknown')) {
cat(n, 'VS', 'total numbwe of protease\n')
print(cor.test(proteases[,n],proteases$Total_Protease))
}
p1 <- ggplot(proteases, aes(x = Total_Protease , y = Aspartic)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Aspartic') +
xlab('Total proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p1
p2 <- ggplot(proteases, aes(x = Total_Protease , y = Cysteine)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Cysteine') +
xlab('Total proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p2
p3 <- ggplot(proteases, aes(x = Total_Protease , y = Glutamic)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Glutamic') +
xlab('Total proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p3
p4 <- ggplot(proteases, aes(x = Total_Protease , y = Serine)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Serine') +
xlab('Total proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p4
p5 <- ggplot(proteases, aes(x = Total_Protease , y = Mixed)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Mixed') +
xlab('Total proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p5
p6 <- ggplot(proteases, aes(x = Total_Protease , y = Metallo)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Metallo') +
xlab('Total proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p6
p7 <- ggplot(proteases, aes(x = Total_Protease , y = Asparagine)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Asparagine') +
xlab('Total proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p7
p8 <- ggplot(proteases, aes(x = Total_Protease , y = Unknown)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Unknown') +
xlab('Total proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p8
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8, nrow = 2, ncol = 4)
compared_complex  <- c("Acutatum",
"Destructivum",
"Gloeosporioides",
'Graminicola-caudatum',
"Orbiculare",
"Orchidearum",
"Spaethianum") # 7 complex with above 3 species
colnames(df)
protease_complex <- subset(df, select = c(Strain, Complex, Total_Protease))
protease_complex <- protease_complex[which(protease_complex$Complex %in% compared_complex), ]
by(protease_complex, protease_complex$Complex, function(df) shapiro.test(df[,3])) # Normality test
kruskal.test(Total_Protease ~ Complex,
data = protease_complex)  # Kruskal-Wallis rank sum test
dunnTest(Total_Protease ~ Complex,data = protease_complex , method='bonferroni') # Kruskal-Wallis multiple comparison, p-values adjusted with the Bonferroni method.
aggregate(protease_complex$Total_Protease, by=list(type=protease_complex$Complex), mean) # Mean of genome size each complex
protease_difference_complex <- ggplot(protease_complex, aes(x= Complex, y = Total_Protease)) +  # Plot with significance # supplementary figure CAZymes
geom_boxplot(aes(fill=Complex)) +
theme_bw() + geom_signif(comparisons = list(c("Acutatum", "Gloeosporioides"),
c("Destructivum", "Gloeosporioides"),
c("Gloeosporioides","Graminicola-caudatum"),
c("Gloeosporioides","Orbiculare"),
c('Graminicola-caudatum', 'Spaethianum')), map_signif_level = TRUE, y_position = c(170,180,190,200,170)) +
theme(axis.text.x = element_text(angle = 45, hjust =1), text = element_text(size = 8)) +
ylab('Protease') + xlab(NULL) + ylim(NA, 240)
protease_difference_complex
# difference of number of lipase between complexes
lipase <- subset(df, select = c(Strain, Complex, Total_Lipase))
lipase_complex <- lipase[which(lipase$Complex %in% compared_complex), ]
by(lipase_complex, lipase_complex$Complex, function(df) shapiro.test(df[,3])) # Normality test
kruskal.test(Total_Lipase ~ Complex,
data = lipase_complex)  # Kruskal-Wallis rank sum test
dunnTest(Total_Lipase ~ Complex,data = lipase_complex , method='bonferroni') # Kruskal-Wallis multiple comparison, p-values adjusted with the Bonferroni method.
aggregate(lipase_complex$Total_Lipase, by=list(type=lipase_complex$Complex), mean) # Mean of genome size each complex
lipase_difference_complex <- ggplot(lipase_complex, aes(x= Complex, y = Total_Lipase)) +  # Plot with significance # supplementary figure CAZymes
geom_boxplot(aes(fill=Complex)) +
theme_bw() + geom_signif(comparisons = list(c("Acutatum", "Destructivum"),
c("Acutatum", "Graminicola-caudatum"),
c("Destructivum", "Gloeosporioides"),
c("Gloeosporioides","Graminicola-caudatum"),
c("Acutatum", "Orbiculare"),
c("Gloeosporioides","Orbiculare"),
c("Acutatum", 'Spaethianum'),
c("Gloeosporioides", 'Spaethianum')), map_signif_level = TRUE, y_position = c(22,26,23,21,29,27,34,32)) +
theme(axis.text.x = element_text(angle = 45, hjust =1), text = element_text(size = 8)) +
ylab('Lipase') + xlab(NULL) + ylim(NA, 40)
lipase_difference_complex
# SSPs
cor.test(df$SSP, df$Secretome)
ssps <- ggplot(df, aes(x = Secretome, y = SSP)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('SSPs') +
xlab('Secretome') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
ssps
ssp <- subset(df, select = c(Strain, Complex, SSP))
compared_complex  <- c("Acutatum",
"Destructivum",
"Gloeosporioides",
'Graminicola-caudatum',
"Orbiculare",
"Orchidearum",
"Spaethianum") # 7 complex with above 3 species
ssp <- ssp[which(ssp$Complex %in% compared_complex), ]
by(ssp, ssp$Complex, function(df) shapiro.test(df[,3])) # Normality test
kruskal.test(SSP ~ Complex,
data = ssp)  # Kruskal-Wallis rank sum test
dunnTest(SSP ~ Complex,data = ssp , method='bonferroni') # Kruskal-Wallis multiple comparison, p-values adjusted with the Bonferroni method.
aggregate(ssp$SSP, by=list(type=ssp$Complex),mean) # Mean of genome size each complex
ssp_difference_complex <- ggplot(ssp, aes(x= Complex, y = SSP)) +  # Plot with significance # supplementary figure CAZymes
geom_boxplot(aes(fill=Complex)) +
theme_bw() + geom_signif(comparisons = list(c("Acutatum", "Gloeosporioides"),
c("Destructivum", "Gloeosporioides"),
c("Gloeosporioides","Graminicola-caudatum"),
c("Gloeosporioides","Spaethianum")), map_signif_level = TRUE, y_position = c(560,585,600,620)) +
theme(axis.text.x = element_text(angle = 45, hjust =1), text = element_text(size = 8)) +
ylab('SSP') + xlab(NULL) + ylim(NA, 700)
ssp_difference_complex
ggarrange(secretome_difference_complex, cazy_difference_complex, protease_difference_complex, lipase_difference_complex, ssp_difference_complex,
legend = 'top',
common.legend = TRUE, labels = c('a','b','c','d','e'))
b <- ggplot(df, aes(x = Total_Protein, y = Secretome)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Secretome') +
xlab('Proteome') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
b
ggarrange(b,b,b,nrow = 1)
ggarrange(c1,c2,c3,c4,c5,c6)
c1 <- ggplot(CAZydf_total, aes(x = Total_CAZy , y = CBM)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('CBM') +
xlab('CAZymes') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
c2 <- ggplot(CAZydf_total, aes(x = Total_CAZy , y = PL)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('PL') +
xlab('CAZymes') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
c3 <- ggplot(CAZydf_total, aes(x = Total_CAZy , y = CE)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('CE') +
xlab('CAZymes') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
c4 <- ggplot(CAZydf_total, aes(x = Total_CAZy , y = AA)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('AA') +
xlab('CAZymes') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
c5 <- ggplot(CAZydf_total, aes(x = Total_CAZy , y = GT)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('GT') +
xlab('CAZymes') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
c6 <- ggplot(CAZydf_total, aes(x = Total_CAZy , y = GH)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('GH') +
xlab('CAZymes') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
ggarrange(c1,c2,c3,c4,c5,c6)
ggarrange(c1,c2,c3,c4,c5,c6, labels = c('a','b','c','d','e','f'))
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8, nrow = 2, ncol = 4)
p1 <- ggplot(proteases, aes(x = Total_Protease , y = Aspartic)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Aspartic') +
xlab('Proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p1
p2 <- ggplot(proteases, aes(x = Total_Protease , y = Cysteine)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Cysteine') +
xlab('Proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p2
p3 <- ggplot(proteases, aes(x = Total_Protease , y = Glutamic)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Glutamic') +
xlab('Proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p3
p4 <- ggplot(proteases, aes(x = Total_Protease , y = Serine)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Serine') +
xlab('Proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p4
p5 <- ggplot(proteases, aes(x = Total_Protease , y = Mixed)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Mixed') +
xlab('Proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p5
p6 <- ggplot(proteases, aes(x = Total_Protease , y = Metallo)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Metallo') +
xlab('Proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p6
p7 <- ggplot(proteases, aes(x = Total_Protease , y = Asparagine)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Asparagine') +
xlab('Proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p7
p8 <- ggplot(proteases, aes(x = Total_Protease , y = Unknown)) + geom_point(color='blue') + stat_cor(method = "pearson") + ylab('Unknown') +
xlab('Proteases') + theme_bw() + theme(text = element_text(size = 8)) + geom_smooth(method = "lm", color = "black", fill = "lightgray")
p8
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8, nrow = 2, ncol = 4)
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8, nrow = 3, ncol = 3)
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8, nrow = 3, ncol = 3, labels = c('a','b','c','d','e','f','g','h'))
ssp_difference_complex
ssps
ggarrange(ssps,ssps,ssps, nrow = 1)
# working directory
setwd('G:\\Experiments\\Paper\\Colletotrichum_Phylogenomics\\Version20220110\\secretome')
dir()
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(ggpubr)
library(openxlsx)
library(FSA)
library(ggsignif)
# color map 2 complex
color_lst <- brewer.pal(12, 'Paired')
names(color_lst) <- c("Acutatum", "Gloeosporioides","Undefined","Singleton","Graminicola-caudatum",
"Destructivum","Spaethianum","Boninense","Orbiculare","Orchidearum","Agaves","Truncatum" )
color_lst <- color_lst[-3]
# load secretome data into R
df <- read.xlsx("102_colletotrichum_secretome.xlsx")
colnames(df)
head(df)
stacked_barplot_df <- subset(df, select=c('Accession',"Plotorder", 'Strain', 'Total_CAZy', "Total_Protease","Total_Lipase","SSP","Other"))
stacked_barplot_df <- stacked_barplot_df[order(stacked_barplot_df$Plotorder),]
colnames(stacked_barplot_df)
bubble_plot_df <- df[, !(colnames(df) %in% c( 'Accession',
'Total_CAZy',
"Total_Protease",
"Total_Lipase",
"SSP",
"Other",
'Secretome',
'Secretome_Proportion',
'AA_Proportion',
'GH_Proportion',
'Serine_Proportion',
'Metallo_Proporation',
'GX_Proportion',
'SSP_Proportion',
'Total_Protein',
'Proportion_Secretome_2_Proteome'))]
bubble_plot_df <- bubble_plot_df[order(bubble_plot_df$Plotorder),]
colnames(bubble_plot_df)
bubble_plot_df <- melt(bubble_plot_df, id=c('Strain', 'Complex', 'Plotorder'))
names(bubble_plot_df) = c('Strain', 'Complex', 'Plotorder', 'Type', 'Value')
head(bubble_plot_df)
bubble_plot_df$Strain <- factor(bubble_plot_df$Strain, levels = rev(df$Strain))
bubble_plot_df$Strain
p1 <- ggplot(bubble_plot_df, aes(x = Type, y = Strain)) +
geom_text(aes(label = Value), size = 2) +
scale_color_manual(values= color_lst) +
geom_point(aes(size = Value, color = Complex), alpha = 6/10) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour = "gray"),
panel.border = element_rect(colour="black",fill=NA),
legend.position = "left",
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(color = 'black', size = 7),
axis.text.y = element_text(color = 'black', size = 7))
p1
p1 <- ggplot(bubble_plot_df, aes(x = Type, y = Strain)) +
geom_text(aes(label = Value), size = 2) +
scale_color_manual(values= color_lst) +
geom_point(aes(size = Value, color = Complex), alpha = 6/10) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour = "gray"),
panel.border = element_rect(colour="black",fill=NA),
# = "left",
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(color = 'black', size = 7),
axis.text.y = element_text(color = 'black', size = 7))
p1
p1 <- ggplot(bubble_plot_df, aes(x = Type, y = Strain)) +
geom_text(aes(label = Value), size = 2) +
scale_color_manual(values= color_lst) +
geom_point(aes(size = Value, color = Complex), alpha = 6/10, legend = FALSE) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour = "gray"),
panel.border = element_rect(colour="black",fill=NA),
legend.position = "left",
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(color = 'black', size = 7),
axis.text.y = element_text(color = 'black', size = 7))
p1 <- ggplot(bubble_plot_df, aes(x = Type, y = Strain)) +
#geom_text(aes(label = Value), size = 2) +
scale_color_manual(values= color_lst) +
geom_point(aes(size = Value, color = Complex), alpha = 6/10) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour = "gray"),
panel.border = element_rect(colour="black",fill=NA),
legend.position = "left",
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(color = 'black', size = 7),
axis.text.y = element_text(color = 'black', size = 7))
p1
# color map 2 complex
color_lst <- brewer.pal(12, 'Paired')
names(color_lst) <- c("Acutatum", "Gloeosporioides","Undefined","Singleton","Graminicola-caudatum",
"Destructivum","Spaethianum","Boninense","Orbiculare","Orchidearum","Agaves","Truncatum" )
color_lst <- color_lst[-3]
# load secretome data into R
df <- read.xlsx("102_colletotrichum_secretome.xlsx")
colnames(df)
head(df)
stacked_barplot_df <- subset(df, select=c('Accession',"Plotorder", 'Strain', 'Total_CAZy', "Total_Protease","Total_Lipase","SSP","Other"))
stacked_barplot_df <- stacked_barplot_df[order(stacked_barplot_df$Plotorder),]
colnames(stacked_barplot_df)
bubble_plot_df <- df[, !(colnames(df) %in% c( 'Accession',
'Total_CAZy',
"Total_Protease",
"Total_Lipase",
"SSP",
"Other",
'Secretome',
'Secretome_Proportion',
'AA_Proportion',
'GH_Proportion',
'Serine_Proportion',
'Metallo_Proporation',
'GX_Proportion',
'SSP_Proportion',
'Total_Protein',
'Proportion_Secretome_2_Proteome'))]
bubble_plot_df <- bubble_plot_df[order(bubble_plot_df$Plotorder),]
colnames(bubble_plot_df)
bubble_plot_df <- melt(bubble_plot_df, id=c('Strain', 'Complex', 'Plotorder'))
names(bubble_plot_df) = c('Strain', 'Complex', 'Plotorder', 'Type', 'Value')
head(bubble_plot_df)
bubble_plot_df$Strain <- factor(bubble_plot_df$Strain, levels = rev(df$Strain))
bubble_plot_df$Strain
p1 <- ggplot(bubble_plot_df, aes(x = Type, y = Strain)) +
geom_text(aes(label = Value), size = 2) +
scale_color_manual(values= color_lst) +
geom_point(aes(size = Value, color = Complex), alpha = 6/10) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour = "gray"),
panel.border = element_rect(colour="black",fill=NA),
legend.position = "left",
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(color = 'black', size = 7),
axis.text.y = element_text(color = 'black', size = 7))
p1
View(bubble_plot_df)
names(color_lst) <- c("Acutatum", "Gloeosporioides","Undefined","Singleton","Graminicola-caudatum",
"Destructivum","Spaethianum","Boninense","Orbiculare","Orchidearum","Agaves","Truncatum" )
color_lst <- color_lst[-3]
# load secretome data into R
df <- read.xlsx("102_colletotrichum_secretome.xlsx")
colnames(df)
head(df)
stacked_barplot_df <- subset(df, select=c('Accession',"Plotorder", 'Strain', 'Total_CAZy', "Total_Protease","Total_Lipase","SSP","Other"))
stacked_barplot_df <- stacked_barplot_df[order(stacked_barplot_df$Plotorder),]
colnames(stacked_barplot_df)
bubble_plot_df <- df[, !(colnames(df) %in% c( 'Accession',
'Total_CAZy',
"Total_Protease",
"Total_Lipase",
"SSP",
"Other",
'Secretome',
'Secretome_Proportion',
'AA_Proportion',
'GH_Proportion',
'Serine_Proportion',
'Metallo_Proporation',
'GX_Proportion',
'SSP_Proportion',
'Total_Protein',
'Proportion_Secretome_2_Proteome'))]
bubble_plot_df <- bubble_plot_df[order(bubble_plot_df$Plotorder),]
colnames(bubble_plot_df)
View(bubble_plot_df)
bubble_plot_df$Organism <- NULL
View(bubble_plot_df)
bubble_plot_df <- melt(bubble_plot_df, id=c('Strain', 'Complex', 'Plotorder'))
View(bubble_plot_df)
names(bubble_plot_df) = c('Strain', 'Complex', 'Plotorder', 'Type', 'Value')
head(bubble_plot_df)
bubble_plot_df$Strain <- factor(bubble_plot_df$Strain, levels = rev(df$Strain))
bubble_plot_df$Strain
p1 <- ggplot(bubble_plot_df, aes(x = Type, y = Strain)) +
geom_text(aes(label = Value), size = 2) +
scale_color_manual(values= color_lst) +
geom_point(aes(size = Value, color = Complex), alpha = 6/10) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour = "gray"),
panel.border = element_rect(colour="black",fill=NA),
legend.position = "left",
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(color = 'black', size = 7),
axis.text.y = element_text(color = 'black', size = 7))
p1
colnames(df)
barplot_df <- subset(df, select = c('Strain', 'Complex', 'Plotorder','Total_CAZy', "Total_Protease","Total_Lipase","SSP","Other"))
head(barplot_df)
barplot_df_melt <- melt(barplot_df, id = c('Strain','Complex', 'Plotorder'))
head(barplot_df_melt)
colnames(barplot_df_melt) <- c('Strain', 'Complex', 'Plotorder', 'Type', 'Count')
barplot_df_melt$Strain <- factor(barplot_df_melt$Strain, levels = rev(df$Strain))
barplot_df_melt$Strain
head(barplot_df_melt)
p2 <- ggplot(barplot_df_melt, aes(x= Strain, y = Count, fill = Type)) +
geom_bar(stat = "identity") + coord_flip()  +
theme_bw() + scale_y_continuous(expand = c(0,0)) +
theme(legend.position = 'right',
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
p2
percentage_secretome_df <- subset(df, select = c('Strain', 'Complex', 'Plotorder', 'Secretome', 'Proportion_Secretome_2_Proteome'))
head(percentage_secretome_df)
percentage_secretome_df$Strain <- factor(percentage_secretome_df$Strain, levels = rev(df$Strain))
percentage_secretome_df$Strain
head(percentage_secretome_df)
p3 <- ggplot(percentage_secretome_df, aes(x= Strain, y = Secretome/Proportion_Secretome_2_Proteome * 100, color = Complex)) +
geom_point(show.legend = FALSE) + coord_flip()  +
theme_bw() + scale_y_continuous(expand = c(0,0), limits = c(5,15)) +
scale_color_manual(values= color_lst) +
theme(legend.position = NULL,
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
p3
ggarrange(p1, p2,  nrow = 1, widths = c(1,0.3))
# size fo secretome is related to proteome size
cor.test(df$Secretome, df$Total_Protein,method="pearson") # p-value = 0.4878
library(tidytree)
library(treeio)
dir()
# CAFE5
setwd('G:\\Github\\Scripts\\cafe5_script')
dir()
help(*node*)
library(ggtree)
tre1 <- read.newick('tree.txt') + geom_tiplab()
tre1 <- read.newick('tree.txt')
ggtree(tre1) + geom_tiplab()
ggtree(tre1) + geom_tiplab() + xlim(0, 150)
tre1_tbl <- fortify(tre1)
# CAFE5
setwd('G:\\Github\\Scripts\\cafe5_script')
library(tidytree)
library(treeio)
library(ggtree)
dir()
tre1 <- read.newick('tree.txt')
tre1_tbl <- fortify(tre1)
ggtree(tre1) + geom_tiplab() + xlim(0, 150)
View(tre1_tbl)
getNodeNum(tre1)
print(i)
for (i in tre1_tbl$node) {
print(i)
}
print(isTip(i)
}
for (i in tre1_tbl$node) {
print(isTip(i))
}
ds
````
for (i in tre1_tbl$node) {
print(isTip(i))
}
tre1_tbl[tre1_tbl$isTip == TRUE]
tre1_tbl[tre1_tbl$isTip]
tre1_tbl[tre1_tbl$isTip,]
df2 <- tre1_tbl[tre1_tbl$isTip,]
df <- data.frame('Nodelabel':df2$label)
df <- data.frame('Nodelabel'=df2$label)
df
df <- data.frame(Nodelabel=df2$label, Des1=df2$node)
df
df <- data.frame(Nodelabel=df2$label, Des1=rep('-', 12))
df
df <- data.frame(Nodelabel=df2$label, Des1=rep('-', 12), Des2=rep('-', 12))
df
parent(tre1, 1)
offspring(tre1,16)
internal_tbl <- tre1_tbl[!tre1_tbl$isTip,]
View(internal_tbl)
offspring(tre1,16)[1]
offspring(tre1,16)[2]
View(df)
for (i in internal_tbl$node) {
new_row <- c('-', i, offspring(tre1,i)[1], offspring(tre1,i)[2])
df <- rbind(df,new_row)
}
View(df)
offspring(tre1, 13)
